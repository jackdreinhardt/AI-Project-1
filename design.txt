We want to make this project as easy to code as possible. If we implement the game in a simple way, then attaching searching algorithms will be exponentially easier. Also, its important to be on the same page with regards to design. The following are ideas for the design structure of the game / AI system. This is very incomplete - please help


GAME
================================================================================
class - Game
  // Run() - launches the game
  // BoardSquare matrix
  // Player array

class - BoardSquare
  // boolean array of valid directions
  // Robot occupying space (type: Robot)

class - BoardGoal // inherits from BoardSquare
  // color
  // symbol

class - Robot
  // move()
  // color
  // x,y location

** GUI can read from the BoardSquare matrix of the Game class **
================================================================================


PLAYERS
================================================================================
class - Player
  // name
  // execute_moves() - pure virtual, sends moves to board
  // compute_moves() - pure virtual, returns number of moves to goal

class - AIPlayer // inherits from Player
  // compute_moves() - the meat of the search algorithms

class - HumanPlayer // inherits from Player
  // compute_moves() - read in input from the user

================================================================================


Questions:
  does python have enumerations?






